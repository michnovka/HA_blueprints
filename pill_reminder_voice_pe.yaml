blueprint:
  name: "Pill Reminder LED with Multiple Times and Custom Colors"
  description: >
    This blueprint turns on an LED light at one or more specified times as a pill reminder.
    The LED is set to the configured pill reminder color and brightness. When the configured
    button event occurs (e.g. double_press or triple_press), the LED is first reconfigured
    to the idle settings and then turned off.
  domain: automation
  input:
    pill_times:
      name: "Reminder Times"
      description: "List of times to trigger the pill reminder."
      default: ["08:00:00"]
      selector:
        multiple:
          selector:
            time: {}
    led_light:
      name: "LED Light"
      description: "The LED light to control."
      selector:
        entity:
          domain: light
    button_event_entity:
      name: "Button Event Entity"
      description: "The entity that records button press events (its state updates with a timestamp and an attribute 'event_type')."
      selector:
        entity: {}
    button_press_type:
      name: "Button Press Type"
      description: "The button press type to trigger turning off the LED."
      default: double_press
      selector:
        select:
          options:
            - double_press
            - triple_press
    pill_rgb_color:
      name: "Pill Reminder Color"
      description: "Color for the LED when activating the pill reminder (in hex, e.g. #FF0000)."
      default: "#FF0000"
      selector:
        color: {}
    pill_brightness:
      name: "Pill Reminder Brightness (%)"
      description: "Brightness for the LED when the pill reminder is activated."
      default: 100
      selector:
        number:
          min: 1
          max: 100
    idle_rgb_color:
      name: "Idle LED Color"
      description: "Color for the LED when reverting from a pill reminder (in hex, e.g. #6C5FEC)."
      default: "#6C5FEC"
      selector:
        color: {}
    idle_brightness:
      name: "Idle LED Brightness (%)"
      description: "Brightness for the LED when reverting back to idle state."
      default: 50
      selector:
        number:
          min: 1
          max: 100

trigger:
  # Create a time trigger for each specified reminder time.
  - platform: time
    for_each: !input pill_times
    at: "{{ item }}"
    id: "daily_time_trigger_{{ item }}"
  # Trigger based on the state change of the button event entity.
  - platform: state
    entity_id: !input button_event_entity
    id: button_press_event

action:
  - choose:
      # Pill reminder branch: if any daily time trigger fired,
      # turn on the LED in the pill reminder color and brightness.
      - conditions:
          - condition: template
            value_template: "{{ trigger.id.startswith('daily_time_trigger') }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input led_light
            data:
              rgb_color: >
                {{ [
                  (inputs.pill_rgb_color[1:3] | int(base=16)),
                  (inputs.pill_rgb_color[3:5] | int(base=16)),
                  (inputs.pill_rgb_color[5:7] | int(base=16))
                ] }}
              brightness_pct: !input pill_brightness

      # Button event branch: when the button event fires and its new state's attribute
      # event_type matches the specified button press type, and if the LED is currently on,
      # then restore the LED to its idle settings and turn it off.
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.id == 'button_press_event' and
                 trigger.to_state.attributes.event_type == inputs.button_press_type }}
          - condition: state
            entity_id: !input led_light
            state: "on"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input led_light
            data:
              rgb_color: >
                {{ [
                  (inputs.idle_rgb_color[1:3] | int(base=16)),
                  (inputs.idle_rgb_color[3:5] | int(base=16)),
                  (inputs.idle_rgb_color[5:7] | int(base=16))
                ] }}
              brightness_pct: !input idle_brightness
          - service: light.turn_off
            target:
              entity_id: !input led_light
mode: single
